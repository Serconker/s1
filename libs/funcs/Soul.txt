#[
Some commands as example for SOUL.

{os soul runthis core.egp.main.create.etc.1.256.256.50.1.This is. v,Food
{os soul runthis core.setval.Food.Pie!
{os soul runthis core.egp.secondary.create.etc.4.256.256.50.1.t.e.x.t. v,Souldb
{os soul runthis core.egp.main.set.item.mat.3.gui/center_gradient
{os soul runthis core.egp.main.set.item.mat.1.gui/center_gradient
{os soul runthis core.egp.main.set.group.mat.1.gui/center_gradient
{os soul runthis core.egp.main.set.item.col.3.40.40.60
{os soul runthis core.egp.main.set.item.col.1.40.40.60
{os soul runthis core.egp.main.set.group.col.1.40.40.60
{os soul runthis core.egp.main.create.box.3.256.256.64.64.1
{os soul runthis core.egp.main.create.box.2.256.156.64.64.1
{os soul runthis core.egp.main.create.box.1.256.56.64.64.1
]#
@name Searren Opperating Utillity Language core
#include "s1/libs/funcs/S1_funs"
#include "s1/libs/funcs/io/S1_IO"
function void pushLog(S:string){
    if(Sys_log:count()==0){
        Sys_log[1,string]=S
    }else{
        Sys_log[Sys_log:count()+1,string]=S
    }
    #print(Sys_log)
}

## V Main ##
function string soulCode(C:array,N){
    local Contypes = array("sys,", "v,")
    Func = C[N,string]:explode(".")
    if(Func[1,string]=="core"){
        pushLog(time("day")+"/"+time("month")+"/"+time("hour")+":"+time("min")+":"+time("sec")+": Entered core with '"+C[N,string]+"' function")
        if(Func[2,string]=="egp"){
            if(Func[3,string]=="group"){#core.egp.group.shift.secondary.1
                if(Func[4,string]=="add"){
                   ##Placeholder
                }elseif(Func[4,string]=="shift"){
                    if(Func[5,string]=="main"){
                        local Items = Groups2[Func[6,string]:toNumber(),string]:explode(".")
                        for(I=1,Items:count()){
                            Temp_cords[I,vector2]=S2:egpPos(Items[I,string]:toNumber())
                            Temp_sizes[I,vector2]=S2:egpSize(Items[I,string]:toNumber())
                            Temp_col[I,vector]=S2:egpColor(Items[I,string]:toNumber())
                            Temp_mat[I,string]=S2:egpMaterial(Items[I,string]:toNumber())
                            if(I==Items:count()){
                                for(I=1,Items:count()){                                           
                                    if(Objects2[Items[I,string]:toNumber(),string]:explode(".")[1,string]=="box"){
                                        S:egpBox(Items[I,string]:toNumber(),Temp_cords[I,vector2],Temp_sizes[I,vector2])
                                        S:egpMaterial(Items[I,string]:toNumber(),Temp_mat[I,string])
                                        S:egpColor(Items[I,string]:toNumber(),Temp_col[I,vector])
                                        S2:egpRemove(Items[I,string]:toNumber())
                                    }elseif(Objects2[Items[I,string]:toNumber(),string]:explode(".")[1,string]=="rbox"){
                                        S:egpRoundedBox(Items[I,string]:toNumber(),Temp_cords[I,vector2],Temp_sizes[I,vector2])
                                        S:egpMaterial(Items[I,string]:toNumber(),Temp_mat[I,string])
                                        S:egpColor(Items[I,string]:toNumber(),Temp_col[I,vector])
                                        S2:egpRemove(Items[I,string]:toNumber())
                                    }elseif(Objects2[Items[I,string]:toNumber(),string]:explode(".")[1,string]=="circ"){
                                        S:egpCircle(Items[I,string]:toNumber(),Temp_cords[I,vector2],Temp_sizes[I,vector2])
                                        S:egpMaterial(Items[I,string]:toNumber(),Temp_mat[I,string])
                                        S:egpColor(Items[I,string]:toNumber(),Temp_col[I,vector])
                                        S2:egpRemove(Items[I,string]:toNumber())
                                    }elseif(Objects2[Items[I,string]:toNumber(),string]:explode(".")[1,string]=="text"){
                                        S:egpText(Items[I,string]:toNumber(),Objects2[Items[I,string]:toNumber(),string]:explode(".")[4,string],Temp_cords[I,vector2])
                                        S:egpAlign(Items[I,string]:toNumber(),1,1)
                                        S:egpSize(Items[I,string]:toNumber(),S:egpSize(Items[I,string]:toNumber()))
                                        S:egpMaterial(Items[I,string]:toNumber(),Temp_mat[I,string])
                                        S:egpColor(Items[I,string]:toNumber(),Temp_col[I,vector])
                                        S2:egpRemove(Items[I,string]:toNumber())
                                    }
                                }
                            }
                        }                        
                    }elseif(Func[5,string]=="secondary"){
                        local Group = Func[6,string]:toNumber()
                        print("THE MOTHERFUCKING GROUP IS "+Group+" OR IS IT!")
                        local Items = Groups[Func[6,string]:toNumber(),string]:explode(".")
                        for(I=1,Items:count()){
                            Temp_cords[I,vector2]=S:egpPos(Items[I,string]:toNumber())
                            Temp_sizes[I,vector2]=S:egpSize(Items[I,string]:toNumber())
                            Temp_col[I,vector]=S:egpColor(Items[I,string]:toNumber())
                            Temp_mat[I,string]=S:egpMaterial(Items[I,string]:toNumber())
                            if(I==Items:count()){
                                for(I=1,Items:count()){                                         
                                    if(Objects[Items[I,string]:toNumber(),string]:explode(".")[1,string]=="box"){
                                        S2:egpBox(Items[I,string]:toNumber(),Temp_cords[I,vector2],Temp_sizes[I,vector2])
                                        S2:egpMaterial(Items[I,string]:toNumber(),Temp_mat[I,string])
                                        S2:egpColor(Items[I,string]:toNumber(),Temp_col[I,vector])
                                        S:egpRemove(Items[I,string]:toNumber())
                                    }elseif(Objects[Items[I,string]:toNumber(),string]:explode(".")[1,string]=="rbox"){
                                        S2:egpRoundedBox(Items[I,string]:toNumber(),Temp_cords[I,vector2],Temp_sizes[I,vector2])
                                        S2:egpMaterial(Items[I,string]:toNumber(),Temp_mat[I,string])
                                        S2:egpColor(Items[I,string]:toNumber(),Temp_col[I,vector])
                                        S:egpRemove(Items[I,string]:toNumber())
                                    }elseif(Objects[Items[I,string]:toNumber(),string]:explode(".")[1,string]=="circ"){
                                        S2:egpCircle(Items[I,string]:toNumber(),Temp_cords[I,vector2],Temp_sizes[I,vector2])
                                        S2:egpMaterial(Items[I,string]:toNumber(),Temp_mat[I,string])
                                        S2:egpColor(Items[I,string]:toNumber(),Temp_col[I,vector])
                                        S:egpRemove(Items[I,string]:toNumber())
                                    }elseif(Objects[Items[I,string]:toNumber(),string]:explode(".")[1,string]=="text"){
                                        #S2:egpText(Items[I,string]:toNumber(),Objects[Items[I,string]:toNumber(),string]:explode(".")[4,string],Temp_cords[I,vector2])
                                        #S2:egpAlign(Items[I,string]:toNumber(),1,1)
                                        #S2:egpSize(Items[I,string]:toNumber(),S:egpSize(Items[I,string]:toNumber()))
                                        print("########################")
#[###################################]# print(Func)
#[###################################]# print("########################")
#[  Remind me to finish this STUFF!  ]# print(Groups[Func[6,string]:toNumber(),string])
#[##########I mean fix, shh##########]# S2:egpColor(Items[I,string]:toNumber(),Temp_col[I,vector])
#[###################################]# S:egpRemove(Items[I,string]:toNumber())
                                        soulCode(array("core.egp.secondary.create.etc."+Items[I,string]:toNumber()+"."+Temp_cords[I,vector2]:x()+"."+Temp_cords[I,vector2]:y()+"."+Objects[Items[I,string]:toNumber(),string]:explode(".")[5,string]+"."+Func[6,string]+"."+Stitch),1)
#                                        soulCode(array("core.egp.secondary.create.etc."+Items[I,string]:toNumber()+"."+Temp_cords[I,vector2]:x()+"."+Temp_cords[I,vector2]:y()+"."+Func[6,string]+"."+Stitch),1)
#[                                        print("core.egp.secondary.create.etc."+Items[I,string]:toNumber()+"."+Temp_cords[I,vector2]:x()+"."+Temp_cords[I,vector2]:y()+"."+Func[6,string]:toNumber()+"."+Stitch)
                                        print(Func[6,string])
                                        print("########################")
                                        print(Func)
                                        print(Func)
                                       print("########################")
]#                                  }else{
                                        print("Soul: invalid entry on Function; "+C[N,string]+", "+Func[1,string]+" Unkown item or tampered array?")
                                    }
                                }
                            }
                        }
                    }else{
                        print("Soul: invalid entry on Function 5; "+C[N,string]+", "+Func[1,string])
                    }
                }else{
                    print("Soul: invalid entry on Function 4; "+C[N,string]+", "+Func[1,string])
                }
            }elseif(Func[3,string]=="main"){ ##core.egp.main.create.box.1.256.256.64.64.1
                if(Func[4,string]=="create"){ ##core.egp.main.create.box.1.256.256.64.64.1
                    if(Func[5,string]=="box"){
                        S:egpBox(Func[6,string]:toNumber(),vec2(Func[7,string]:toNumber(),Func[8,string]:toNumber()),vec2(Func[9,string]:toNumber(),Func[10,string]:toNumber()))
                        Objects[Func[6,string]:toNumber(),string]="box.static."+Func[11,string]
                        Groups[Func[11,string]:toNumber(),string]=Groups[Func[11,string]:toNumber(),string]+Func[6,string]+"."
                        pushLog(time("day")+"/"+time("month")+"/"+time("hour")+":"+time("min")+":"+time("sec")+": Created a box with soul")
                    }elseif(Func[5,string]=="boxr"){
                        S:egpRoundedBox(Func[6,string]:toNumber(),vec2(Func[7,string]:toNumber(),Func[8,string]:toNumber()),vec2(Func[9,string]:toNumber(),Func[10,string]:toNumber()))
                        Objects[Func[6,string]:toNumber(),string]="boxr.static."+Func[11,string]
                        Groups[Func[11,string]:toNumber(),string]=Groups[Func[11,string]:toNumber(),string]+Func[6,string]+"."
                        pushLog(time("day")+"/"+time("month")+"/"+time("hour")+":"+time("min")+":"+time("sec")+": Created a rounded box with soul")
                    }elseif(Func[5,string]=="circ"){
                        S:egpCircle(Func[6,string]:toNumber(),vec2(Func[7,string]:toNumber(),Func[8,string]:toNumber()),vec2(Func[9,string]:toNumber(),Func[10,string]:toNumber()))
                        Objects[Func[6,string]:toNumber(),string]="circ.static."+Func[11,string]
                        Groups[Func[11,string]:toNumber(),string]=Groups[Func[11,string]:toNumber(),string]+Func[6,string]+"."
                        pushLog(time("day")+"/"+time("month")+"/"+time("hour")+":"+time("min")+":"+time("sec")+": Created a circle with soul")
                    }elseif(Func[5,string]=="etc"){
                        
                        Index = Func[6,string]:toNumber()
                        Stitch = ""
                        for(I=1,Func:count()-10){
                            Stitch = Stitch+Func[10+I,string]
                            if(Func[10+I,string]:find("v,")){
                                Func[10+I,string]=Func[10+I,string]:replace(Func[10+I,string],Trunk[Func[10+I,string]:explode("v,")[2,string],string])
                                Ph_String = Ph_String+Func[10+I,string]
                            }else{
                                Ph_String = Ph_String+Func[10+I,string]                        
                            }
                            if(I==Func:count()-10){
                                S:egpText(Func[6,string]:toNumber(),Ph_String,vec2(Func[7,string]:toNumber(),Func[8,string]:toNumber()))
                                S:egpAlign(Func[6,string]:toNumber(),1,1)
                                S:egpSize(Func[6,string]:toNumber(),Func[9,string]:toNumber())
                                Objects[Func[6,string]:toNumber(),string]="text.static."+Func[10,string]+Stitch+Func[9,string]
                                Groups[Func[10,string]:toNumber(),string]=Groups[Func[10,string]:toNumber(),string]+Func[6,string]+"."
                                pushLog(time("day")+"/"+time("month")+"/"+time("hour")+":"+time("min")+":"+time("sec")+": Created text with soul")
                                Ph_String = ""
                            }
                        }
                        
                    }elseif(Func[5,string]=="etcadv"){
                        #core.egp.create.[screen].etcadv.[index].[posx],[posy].[text]/[concat]/[value]/[any combo]
                        #1    2   3      4        5      6       7             8 +
                        
                        local Index = Func[6,string]:toNumber()
                        local Pos = vec2(Func[7,string]:explode(",")[1,string]:toNumber(),Func[7,string]:explode(",")[2,string]:toNumber())
                        local Cont = Func:count()-7
                        Stitch = ""
                        
                        for(I=1, Cont){
                            local Ci = Cont+I
                            local Strp = Func[Ci,string]
                            if(anyIn(Contypes, Strp):length()>0){
                                
                            }else{
                            
                            }
                        }
                    }
                    
                }elseif(Func[4,string]=="set"){
                    if(Func[5,string]=="button"){
                        if(Func[6,string]=="rs"){
                            local Spl = Objects[Func[9,string]:toNumber(),string]:explode(".")
                            Spl[4,string]="."+Func[7,string]
                            Buttons[Buttons:count()+1,string]=Func[9,string]+"."+Func[8,string]
                            Objects[Func[6,string]:toNumber(),string]=Spl[1,string]+".sbutton."+Spl[3,string]+"."+Spl[4,string]
                            print(Buttons[Buttons:count(),string])
                            print(Objects[Func[6,string]:toNumber(),string])
                        }else{
                            Buttons[Buttons:count()+1,string]=Func[6,string]+"."+Func[7,string]+"."+Func[8,string]
                            Objects[Func[6,string]:toNumber(),string]:replace("static","button")
                            print("Made button with data "+Func[6,string]+"."+Func[7,string]+"."+Func[8,string])
                        }
                    }elseif(Func[5,string]=="item"){
                        if(Func[6,string]=="mat"){
                            S:egpMaterial(Func[7,string]:toNumber(),Func[8,string])
                        }elseif(Func[6,string]=="col"){
                            if(Func:count()==10){
                                S:egpColor(Func[7,string]:toNumber(),vec(Func[8,string]:toNumber(),Func[9,string]:toNumber(),Func[10,string]:toNumber()))
                            }elseif(Func:count()==11){
                                S:egpColor(Func[7,string]:toNumber(),vec4(Func[8,string]:toNumber(),Func[9,string]:toNumber(),Func[10,string]:toNumber(),Func[11,string]:toNumber()))
                            }
                        }elseif(Func[6,string]=="angle"){
                            S:egpAngle(Func[7,string]:toNumber(),Func[8,string]:toNumber())
                        }
                    }elseif(Func[5,string]=="group"){
                        local Gi = Groups[Func[7,string]:toNumber(),string]:explode(".")
                        if(Func[6,string]=="mat"){
                            for(X=1,Gi:count()+1){
                                S:egpMaterial(Gi[X,string]:toNumber(),Func[8,string])
                            }
                        }elseif(Func[6,string]=="col"){
                            for(X=1,Gi:count()+1){
                                S:egpColor(Gi[X,string]:toNumber(),vec(Func[7,string]:toNumber(),Func[8,string]:toNumber(),Func[9,string]:toNumber()))
                            }
                        }
                    }else{
                        print("Soul: invalid entry on Function; "+C[N,string]+", "+Func[1,string])
                    }
                }
            }elseif(Func[3,string]=="secondary"){ ##### Screen two(user screen)
                print("a")
                if(Func[4,string]=="create"){
                    print("b")
                    if(Func[5,string]=="box"){
                        print("c")
                        S2:egpBox(Func[6,string]:toNumber(),vec2(Func[7,string]:toNumber(),Func[8,string]:toNumber()),vec2(Func[9,string]:toNumber(),Func[10,string]:toNumber()))
                        Objects2[Func[6,string]:toNumber(),string]="box.static."+Func[11,string]
                        Groups2[Func[11,string]:toNumber(),string]=Groups2[Func[11,string]:toNumber(),string]+Func[6,string]+"."
                        pushLog(time("day")+"/"+time("month")+"/"+time("hour")+":"+time("min")+": Created a box with soul")
                    }elseif(Func[5,string]=="boxr"){
                        print("d")
                        S2:egpRoundedBox(Func[6,string]:toNumber(),vec2(Func[7,string]:toNumber(),Func[8,string]:toNumber()),vec2(Func[9,string]:toNumber(),Func[10,string]:toNumber()))
                        Objects2[Func[6,string]:toNumber(),string]="boxr.static."+Func[11,string]
                        Groups2[Func[11,string]:toNumber(),string]=Groups2[Func[11,string]:toNumber(),string]+Func[6,string]+"."
                        pushLog(time("day")+"/"+time("month")+"/"+time("hour")+":"+time("min")+":"+time("sec")+": Created a rounded box with soul")
                    }elseif(Func[5,string]=="circ"){
                        print("e")
                        S2:egpCircle(Func[6,string]:toNumber(),vec2(Func[7,string]:toNumber(),Func[8,string]:toNumber()),vec2(Func[9,string]:toNumber(),Func[10,string]:toNumber()))
                        Objects2[Func[6,string]:toNumber(),string]="circ.static."+Func[11,string]
                        Groups2[Func[11,string]:toNumber(),string]=Groups2[Func[11,string]:toNumber(),string]+Func[6,string]+"."
                        pushLog(time("day")+"/"+time("month")+"/"+time("hour")+":"+time("min")+":"+time("sec")+": Created a circle with soul")
                    }elseif(Func[5,string]=="etc"){
                        print("f")
                        Index = Func[6,string]:toNumber()
                        for(I=1,Func:count()-10){
                            print("g")
                            if(Func[10+I,string]:find("v,")){
                                print("h")
                                Func[10+I,string]=Func[10+I,string]:replace(Func[10+I,string],Trunk[Func[10+I,string]:explode("v,")[2,string],string])
                                Ph_String = Ph_String+Func[10+I,string]
                            }else{
                                print("i")
                                Ph_String = Ph_String+Func[10+I,string]                        
                            }
                            if(I==Func:count()-10){
                                print("j")
                                S2:egpText(Func[6,string]:toNumber(),Ph_String,vec2(Func[7,string]:toNumber(),Func[8,string]:toNumber()))
                                S2:egpAlign(Func[6,string]:toNumber(),1,1)
                                S2:egpSize(Func[6,string]:toNumber(),Func[9,string]:toNumber())
                                Objects2[Func[6,string]:toNumber(),string]="text.static."+Func[10,string]+Ph_String
                                Groups2[Func[10,string]:toNumber(),string]=Groups2[Func[10,string]:toNumber(),string]+Func[6,string]+"."
                                pushLog(time("day")+"/"+time("month")+"/"+time("hour")+":"+time("min")+":"+time("sec")+": Created text with soul")
                                Ph_String = ""
                            }
                        }
                    }
                }elseif(Func[4,string]=="set"){
                    if(Func[5,string]=="button"){
                        if(Func[6,string]=="rs"){
                            local Spl = Objects2[Func[9,string]:toNumber(),string]:explode(".")
                            Spl[4,string]="."+Func[7,string]
                            Buttons2[Buttons2:count()+1,string]=Func[9,string]+"."+Func[8,string]
                            Objects2[Func[6,string]:toNumber(),string]=Spl[1,string]+".sbutton."+Spl[3,string]+"."+Spl[4,string]
                        }else{
                            Buttons2[Buttons2:count()+1,string]=Func[6,string]+"."+Func[7,string]+"."+Func[8,string]
                            Objects2[Func[6,string]:toNumber(),string]:replace("static","button")
                        }
                    }elseif(Func[5,string]=="item"){
                        if(Func[6,string]=="mat"){
                            S2:egpMaterial(Func[7,string]:toNumber(),Func[8,string])
                        }elseif(Func[6,string]=="col"){
                            S2:egpColor(Func[7,string]:toNumber(),vec(Func[8,string]:toNumber(),Func[9,string]:toNumber(),Func[10,string]:toNumber()))
                        }
                    }elseif(Func[5,string]=="group"){
                        local Gi = Groups2[Func[7,string]:toNumber(),string]:explode(".")
                        if(Func[6,string]=="mat"){
                            for(X=1,Gi:count()){
                                S2:egpMaterial(Gi[X,string]:toNumber(),Func[8,string])
                            }
                        }elseif(Func[6,string]=="col"){
                            for(X=1,Gi:count()){
                                S2:egpColor(Gi[X,string]:toNumber(),vec(Func[7,string]:toNumber(),Func[8,string]:toNumber(),Func[9,string]:toNumber()))
                            }
                        }
                    }
                }
            }elseif(Func[3,string]=="checkb"){
                if((Buttons:count() == 1 && Buttons2:count() == 1)||(Buttons:count() == 1 && Buttons2:count() == 0)||(Buttons:count() == 0 && Buttons2:count() == 1)){
                    local Info = Buttons[1,string]:explode(".")
                    local Info2 = Buttons2[1,string]:explode(".")
                    if(E:touching(S,Info[1,string]:toNumber())){
                        print("Touching button "+Buttons[1,string])
                        if(Objects[Info[1,string]:toNumber(),string]:explode(".")[2,string]=="sbutton"){
                            soulCode(array(Info[2,string]:replace(Info[1,string],".")),1)
                        }else{
                            timer(Info[2,string],Info[3,string]:toNumber())
                        }
                        return ""
                    }
                    if(E:touching(S2,Info2[1,string]:toNumber())){
                        print("Touching button "+Buttons[1,string])
                        if(Objects2[Info2[1,string]:toNumber(),string]:explode(".")[2,string]=="sbutton"){
                            soulCode(array(Info2[2,string]:replace(Info2[1,string],".")),1)
                        }else{
                            timer(Info2[2,string],Info2[3,string]:toNumber())
                        }
                        return ""
                    }
                }
                for(X=0,whatsLarger(Buttons:count(),Buttons2:count())){
                    local Info = Buttons[X,string]:explode(".")
                    local Info2 = Buttons2[X,string]:explode(".")
                    if(E:touching(S,Info[1,string]:toNumber())){
                        print("Touching button "+Buttons[X,string])
                        if(Objects[Info[1,string]:toNumber(),string]:explode(".")[2,string]=="sbutton"){
                            soulCode(array(Info[2,string]:replace(Info[1,string],".")),1)
                        }else{
                            timer(Info[2,string],Info[3,string]:toNumber())
                        }
                        return ""+X
                        break
                    }
                    if(E:touching(S2,Info2[1,string]:toNumber())){
                        print("Touching button "+Buttons[X,string])
                        if(Objects2[Info2[1,string]:toNumber(),string]:explode(".")[2,string]=="sbutton"){
                            soulCode(array(Info2[2,string]:replace(Info2[1,string],".")),1)
                        }else{
                            timer(Info2[2,string],Info2[3,string]:toNumber())
                        }
                        return ""+X
                        break
                    }
                }
            }elseif(Func[3,string]=="textupd"){
                
            }else{
                print("Soul: invalid entry on Function 3; "+C[N,string]+", "+Func[1,string])
            }
        }elseif(Func[2,string]=="kill"){
            selfDestruct()
        }elseif(Func[2,string]=="restart"){
            reset()
        }elseif(Func[2,string]=="setval"){
            Trunk[Func[3,string],string]=Func[4,string]
            print(Trunk[Func[3,string],string]+"  "+Func[4,string]+"  "+Func[3,string])
        }elseif(Func[2,string]=="setout"){
            if(Func[4,string]:find("io,")){
                local Fun=Func[4,string]:replace("io","")
                Func[4,string]=X8_1[Fun:explode(",")[2,string]:toNumber(),string]
                X8_2[Func[3,string]:toNumber(),string]=Func[4,string]
            }elseif(Func[4,string]:find("v,")){
                local Fun=Func[4,string]:replace("v","")
                Func[4,string]=Trunk[Fun:explode(",")[2,string]:toNumber(),string]
                X8_2[Func[3,string]:toNumber(),string]=Func[4,string]
            }else{
                X8_2[Func[3,string]:toNumber(),string]=Func[4,string]
            }
            print(X8_2[Func[3,string]:toNumber(),string]+"#")
        }elseif(Func[2,string]=="getin"){
            print(X8_1[Func[3,string]:toNumber(),string])
            return X8_1[Func[3,string]:toNumber(),string]
        }elseif(Func[2,string]=="pulseout"){
            if(Func[4,string]:find("io,")){
                local Fun=Func[4,string]:replace("io","")
                Func[4,string]=X8_1[Fun:explode(",")[2,string]:toNumber(),string]
                X8_2[Func[3,string]:toNumber(),string]=Func[4,string]
            }elseif(Func[4,string]:find("v,")){
                local Fun=Func[4,string]:replace("v","")
                Func[4,string]=Trunk[Fun:explode(",")[2,string]:toNumber(),string]
                X8_2[Func[3,string]:toNumber(),string]=Func[4,string]
            }else{
                X8_2[Func[3,string]:toNumber(),string]=Func[4,string]
            }
            timer("soulrsetout",Func[5,string]:toNumber())
            Trunk["reset",number]=Func[3,string]:toNumber()
        }elseif(Func[2,string]=="forcetime"){
            timer(Func[3,string],Func[4,string]:toNumber())
        }else{
            print("Soul: invalid entry on Function 2; "+C[N,string]+", "+Func[1,string])
        }
    }elseif(Func[1,string]=="extension"){
        if(Func[2,string]=="meerik"){
            
        }elseif(Func[2,string]=="rcon"){
        
        }elseif(Func[2,string]=="strcon"){
            local Phase = Func[3,string]
            local Vals = array(
            "v, time", 
            "v, date", 
            "sys, status",
            "sys, owner-name",
            "sys, owner-id")
            
            local Res  = array(
            "["+time("hour")+":"+time("min")+":"+time("sec")+"]", 
            "["+time("day")+"/"+time("month")+"/"+time("year")+"]",
            Sys_status,
            owner():name(),
            owner():id())
            
            for(I = 1, Vals:count()){
                if(Phase == Vals[I,string]){
                    return Res[I,string]
                }
            }
        }
        #           All extensions should go above in the same way
        #           using 'elseif(Func[2,string]=="derp-extension"){' statements
        #           and all code to be within them, please do not edit the 
        #           'outer/core' functions or I'll me mad.
        #
        #           ~Serconker
    }else{
        print("Soul: invalid entry on Function 1; "+C[N,string]+", "+Func[1,string])
    }

}
function void wirelink:drawGui(A){
    if(A == 1){
        local Cod = Data:explode("[SOUL]")
        local Code = Cod[2,string]:explode("[")
        timer("mui",0)
        print(This:egpNumObjects())
    }
}
#[ Notes
