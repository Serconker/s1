#[
Do not romove ANY 'Made by' statements, doing so will be breaching Creative Commons copyright as you are implying you made the product.
]#

#@model models/player/items/humans/top_hat.mdl
@name Searren 1
if(first()){
    #include "s1/libs/funcs/S1_funs"
    #include "s1/libs/funcs/io/S1_IO"
    #include "s1/libs/funcs/Soul"
    #include "s1/apps/rcon/resources"
    ##include "e2shared/s1/expansions/includes"
    function entity closestPly(){
        findByClass("player")
        E = findClosest(entity():pos())
    }
    function void checkForNewRconCommand(){
        if(S1_rcon_allow != 1){
            print("Remote console is dissabled, ignoring.")
        }elseif(!httpCanRequest()){
            print("Cannot request the RCON domain.")
        }else{
            httpRequest("http://felthatters.net/smf/s1crux.php?action=rcon&id="+ID2)
        }
    }
    function string core_time(){
        return "["+time("hour")+":"+time("min")+":"+time("sec")+"]"
    }
    function string core_date(){
        return "["+time("day")+"/"+time("month")+"/"+time("year")+"]"
    }
    function void core_addlog(S:string){
        fileAppend(">e2shared/s1/logs/log.txt", core_date()+" | "+core_time()+" | "+S+"
")
        #printColor(vec(220,0,0),"Printing to log file; s1/logs/log.txt; "+S)
    }
    function string pageEGPObjects(IndexA, IndexB, Name:string){
        local A = IndexA
        local B = IndexB
        local N = Name
        if(Sys_pagedobjects:count()<2){
            Sys_pagedobjects[Sys_pagedobjects:count(),string]=A+"-"+B+"-"+N
            core_addlog("Created EGP object page range.. ["+A+"-"+B+"-"+N+"]")
        }else{
            for(I=1,Sys_pagedobjects:count()){
                local Ob = Sys_pagedobjects[I,string]
                local Ac = Ob:explode("-")[1,string]:toNumber()
                local Bc = Ob:explode("-")[2,string]:toNumber()
                local Nc = Ob:explode("-")[3,string]
                if(inrange(A,Ac,Bc)){
                    core_addlog("Page lower range is within anothers range.. ["+Nc+"]")
                    return "Page lower range is within anothers range.. ["+Nc+"]"
                }
                if(I==Sys_pagedobjects:count()){
                    Sys_pagedobjects[Sys_pagedobjects:count(),string]=A+"-"+B+"-"+N
                    core_addlog("Created EGP object page range.. ["+A+"-"+B+"-"+N+"]")
                    return "Object range paged"
                }
            }
        }
    }
    function string pageRemove(N){
        Sys_pagedobjects:remove(N)
    }
    function number objecIsInPagedRange(N){
        for(I=1,Sys_pagedobjects:count()){
            local Ob = Sys_pagedobjects[I,string]
            local Ac = Ob:explode("-")[1,string]:toNumber()
            local Bc = Ob:explode("-")[2,string]:toNumber()
            local Nc = Ob:explode("-")[3,string]
            if(inrange(N,Ac,Bc)){
                return 1
            }else{
                return 0
            }
        }
    }
    function void core_sortLogs(){
        Buff_string=""
        local Arr = Sys_log
        for(I=1,Arr:count()){
            Buff_string = Buff_string+Arr[I,string]+"
"
            Sys_log_p[Sys_log_p:count()+1,string] = Arr[I,string]
            #print(Buff_string)
            if(I==Arr:count()){
                Sys_log=array()
                core_addlog("[SOUL LOG DUMP START]
"+Buff_string+"
"+core_date()+" | "+core_time()+" | "+" [SOUL LOG DUMP END]")
            }
        }
    }
    function string wirelink:core_setStatus(S:string,Col:vector4,N){
        Sys_status = S
        if(S!=""){
            This:egpText(patchNum1(Data_split[4+1,string],Data_split[4+10,string]),S,vec2(Apvx,Apvy))
            This:egpColor(patchNum1(Data_split[4+1,string],Data_split[4+10,string]),Col)
            core_addlog("Status: "+S)
            timer("rststat",N*1000)
        }else{
            This:egpText(patchNum1(Data_split[4+1,string],Data_split[4+10,string]),"System idling",vec2(Apvx,Apvy)) 
            This:egpColor(patchNum1(Data_split[4+1,string],Data_split[4+10,string]),vec(255,0,0)) 
            core_addlog("Status: System idling..")
        }
    }
    function string wirelink:core_setStatus(S:string,Col:vector4){
        if(S!=""){
            This:egpText(patchNum1(Data_split[4+1,string],Data_split[4+10,string]),S,vec2(Apvx,Apvy))
            This:egpColor(patchNum1(Data_split[4+1,string],Data_split[4+10,string]),Col)
            core_addlog("Status: "+S)
            timer("rststat",10000)
        }else{
            This:egpText(patchNum1(Data_split[4+1,string],Data_split[4+10,string]),"System idling",vec2(Apvx,Apvy)) 
            This:egpColor(patchNum1(Data_split[4+1,string],Data_split[4+10,string]),vec(255,0,0)) 
            core_addlog("Status: System idling..")
        }
    }
    ## ^^^ Note for some comands to work 'wire_expression2_concmd 1' must be entered into console.
    S1_rcon_allow = 1
    S1_rcon_allow_egp = 0
    S1_rcon_allow_concmd = 0
    Idle = 1
    Version = "Revision 21.x"
    L_up = "Last update: SOMEWHEN"
    Trunk["Souldb",string]="Hello!"
    ID = shortenID(owner():steamID())
    ID2 = owner():steamID()
    S:egpClear()
    S2:egpClear()
    findByClass("player")
    setName("Searren 1
"+Version+"
BHCs official operating system.
Later revisions will be released at:
www.felthatters.net/smf/
"+L_up+"
Author: Serconker
Awating authentication")
    registerChatCommand("Owner", "test", "os", "S N", "testtim", 0)
    core_addlog("Client booting..")
    #S:keyboard()
    printColor(vec(220,0,0),"If you wish to have help with the usage of this E2, please go here:")
    printColor(vec(0,120,0),"http://www.felthatters.net/smf/os_help.txt")
    printColor(vec(220,0,0),"You should now authenticate your self with:")
    printColor(vec(0,120,0),"{os authme ")
    printColor(vec(40,40,60),"Note, you should never need to use this to sign in on someone else E2")
    print("Time = "+core_time())
    runOnHTTP(1)
    runOnFile(1)
    runOnChat(1)
    runOnLast(1)
    timer("Initial",6000)
    #timer("RunSoul",10000)
}
if(duped()){
    selfDestruct()
}
#[#######################################################]#
#[#######################################################]#
#[######## Timer CLKs(Used as a goto function) ##########]#
#[#######################################################]#
#[#######################################################]#
if(clk("Initial")){
    Load_actions[Load_actions:count()+1,string] = "cfg"
    if(Auth_str == "[Authentic user]"){
        S:core_setStatus("Reloading main CFG file..",vec4(0,155,0,255))
    }
    if(fileCanLoad()){
        fileLoad(">e2shared/s1/settings/main.txt")
    }else{
        print("Cannot load!")
    }
}
if(fileClk(">e2shared/s1/settings/main.txt") #[|| clk("Forceloadcfg")]#){
    if(fileLoaded()){
        if(fileRead()!=""){
            local Cfg_raw = fileRead():trim():explode(",")
            for(I=1, Cfg_raw:count()){
                Sys_settings[Sys_settings:count()+1,string] = Cfg_raw[I,string]
            }
            timer("I", 1000)
        }else{
            fileLoad(">e2shared/s1/settings/main.txt")
            print("Didn't load!")
        }
    }else{
        core_addlog(core_time()+": Couln't load settings file, reported error: "+fileStatus())
        if(fileStatus() == _FILE_UNKNOWN){
            print("Could not load settings file! File is unkown!")
        }elseif(fileStatus() ==  _FILE_OK){
            print("Could not load settings file! File is 'OK'!")
        }elseif(fileStatus() == _FILE_TIMEOUT){
            print("Could not load settings file! File timed out?")
        }elseif(fileStatus() == _FILE_404){
            print("Could not load settings file! File not found?")
        }elseif(fileStatus() == _FILE_TRANSFER_ERROR){
            print("Could not load settings file! Firewall problems, maybe?")
        }
    }
}
if(clk("rststat")){
    S:core_setStatus("",vec4())
}
if(clk("I")){
    if(Load_actions[1,string]=="cfg"){
        local Autolog = core_findSettingValue("autolog"):toNumber()
        Password = core_findSettingValue("pass")
        if(Autolog == 1 && Password != ""){
            if(Auth_str != "[Authentic user]"){
                printColor(vec(0,120,0),"Autologging..")
                timer("Reini",1000)
            }
        }
        timer("Initial",60000)
        timer("rststat",0)
    }
}
if (clk("G1")){
    Cords = vec2(patchNum1(Data_split[4+7,string],Data_split[4+10,string]),patchNum2(
    Data_split[4+1,string],Data_split[4+10,string],Data_split[4+10,string]))
    #70,100
    Cx = Cords:x()
    Cy = Cords:y()
    S2:drawGui(1)
    S:drawGui(1)
    #S:core_setStatus("Setting UI specific values..",vec4(0,155,0,255))
    #timer("rststat",1000)
    #timer("Guifr",1000)
}
if (clk("Guifr")){
    # LA = LastAmount
    Db = Data_split[4+1,string]:toNumber()
    Owner = owner():name()
    Version2 = "Searren 1 ("+Version+")"
    Title = ""+Auth_str+"Welcome, "+Owner+""
    M = Data_split[4+10,string]:toNumber()
    Apvx = patchNum2(Data_split[4+1,string],Data_split[4+3,string],Data_split[4+10,string])
    Apvy = patchNum1(Data_split[4+9,string],Data_split[4+1,string])
    S:egpText(patchNum1(Data_split[4+2,string],Data_split[4+6,string]),""+Title,vec2(125,Cy+5))
    S:egpText(patchNum1(Data_split[4+2,string],Data_split[4+7,string]),""+Version2,vec2(125,Cy-23))
    S:egpColor(patchNum1(Data_split[4+2,string],Data_split[4+6,string]),vec(180,180,180))
    S:egpColor(patchNum1(Data_split[4+2,string],Data_split[4+7,string]),vec(180,180,180))
    timer("Guifr",120000)
    if(App == "" & Idle == Data_split[4+1,string]:toNumber()){
        S:updateTitle(2)
        S:core_setStatus("Refreshing dynamic UI items..",vec4(155,155,255,255),2.5)
    }
    if(Trunk[3,string]!="Inidone"){
        timer("Awk",1000)
    }
}
if(clk("Awk")){
    if(pageEGPObjects(0,20,"MainUI")){
        print("Paged main UI indexes.")
        Trunk[3,string]="Inidone"
    }
}
if(clk("Mouse")){
    findByClass("player")
    E = findClosest(entity():pos())
# print(E)
    if(owner():keyUse()){
        soulCode(array("core.egp.checkb"),1)
        print("pressed")
        #S:core_setStatus("Checking SOUL button objects..",vec4(0,155,0,255),1)
    }   
    timer("Mouse",500)
}
if(clk("testtim")){
    print("Don't touch Timmy, you pervert!")
    S:core_setStatus("TIMMY!",vec4(0,155,0,255))
}
if(clk("soulrsetout")){
    X8_2[Trunk["reset",number],string]=""
}
if(clk("Failure")){
    entity():soundPlay(1,3,"vo/citadel/br_ohshit.wav")
}
if(clk("Uaa")){
    entity():soundPlay(1,3,"npc/overwatch/radiovoice/unlawfulentry603.wav")
}
if(clk("Connect")){
    entity():soundPlay(1,3,"npc/combine_soldier/vo/contactconfim.wav")
}
if(clk("Got_down") & Got_up != 1){
    Got_up = 0
# printColor(vec(0,120,0)," "+Data)
}
if(clk("ep_includes")){
    local Fn = Data:replace("[EXPANSION PACKAGE FOLLOWS]",""):explode("[@]")[2,string]:replace(".txt","")
    local Fc = Data:replace("[EXPANSION PACKAGE FOLLOWS]",""):explode("[@]")[3,string]:replace(".txt","")
    print("FN = "+Fn)
    print("FC = "+Fc)
    fileAppend(">e2shared/s1/expansions/includes.txt",Fc)
}
if(clk("Cig")){
    closestPly()
    timer("Cig",5000)
}
if(clk("mui")){
    Inf++
    local Cod = Data:explode("[SOUL]")
    local Code = Cod[2,string]:explode("[")
    if(Inf!=Code:count()+1){
        soulCode(Code,Inf)
        timer("mui",0)
    }else{ local Derp = E:pos():distance(entity():pos())
        stoptimer("mui")
        timer("Guifr",0)
        S:getAvatar()
    }
}
if(clk("dumpsoul")){
    S:core_setStatus("Dumping & sorting SOUL logs..",vec4(0,155,0,255))
    timer("dumpsoul",180000)
    timer("umpsoul2",10000)
}
if(clk("umpsoul2")){
    print("Printing SOUL log to file..")
    core_sortLogs()
}
if(clk("Reini")){
    if(httpCanRequest()){
        local URL = "http://felthatters.net/smf/s1crux.php?action=auth&userid="+ID+"&userpass="+Password
        #timer("Initial",60000)
        timer("dumpsoul",20000)
        httpRequest(URL)
    }
}
if(clk("Versionget")){
    if(httpCanRequest()){
        print("Requesting")
        httpRequest("http://felthatters.net/smf/s1crux.php?action=version&version="+httpUrlEncode(Version):lower()+"&hash="+hashNoComments():toString())
        timer("Versionget",600000)
        S:core_setStatus("Sending version ping..",vec4(0,155,0,255))
        Got_up = 1
    }else{
        print("Could not request")
    }
}
if(clk("runmenu")){
    S:core_setStatus("Loading app menu..",vec4(125,255,125,255))
    print("This actually worked?")
    timer("Connect",0)
}
#[#######################################################
#[#######################################################
#[############### RCON/Message checker ##################
#[#######################################################
#[#######################################################
]#
if(clk("rcon_a")){
    checkForNewRconCommand() 
    S:core_setStatus("[RCON]Check complete; awaiting phaser response..",vec4(0,155,0,255))
    print("Check complete; awaiting phaser response.")
    timer("rcon",0)
}
if(clk("rcon")){
    if(httpData():find("None, idle")!=1){
        if(S1_rcon_enum_quee_l != 1){
            S:core_setStatus("[RCON]Commands found.. Running.",vec4(0,155,0,255))
            S1_rcon_handling = 1
        }else{
            S1_rcon_command[1,array]=S1_rcon_command_line[1,string]:explode(".")
            S:core_setStatus("[RCON]One command found.. Running.",vec4(0,155,0,255))
        }
    }else{
        print("Nothing to phase")
        S:core_setStatus("[RCON] No commands found.",vec4(0,155,0,255))
    }
}
while(S1_rcon_handling == 1){
    S1_rcon_command[S1_rcon_flick_in,array] = S1_rcon_command_line[S1_rcon_flick_in,string]:explode(".")
    S1_rcon_flick_in++
    if(S1_rcon_flick_in == S1_rcon_enum_quee_l+1){
        S1_rcon_handling = 0
        S1_rcon_flick_in = 0
        timer("runcmds",3000)
        print("Commands split/phasing, running commands.")
        S:core_setStatus("[RCON] Command string phased, running.",vec4(0,155,0,255),1)
    }
}
if(clk("runcmds")){
    S1_rcon_concmd_i++
    rconPhaseAndRun(S1_rcon_concmd_i)
    if(S1_rcon_concmd_i==S1_rcon_command:count()){
        S1_rcon_concmd_i = 0
        S:core_setStatus("[RCON] Commands ran.",vec4(0,155,0,255))
        stoptimer("runcmds")
    }
}
if(fileClk(">e2shared/s1/expansions/"+Trunk["FN",string])){
    print("???")
}
if(clk("ep_ini")){
    fileWrite(">e2shared/s1/expansions/"+Trunk["FN",string],"")
    if(fileCanLoad()){
        fileLoad(">e2shared/s1/expansions/"+Trunk["FN",string])
        print("Can load file")
        timer("forceload",1000)
        Trunk["FS",number] = 1
    }elseif(fileStatus() == _FILE_UNKNOWN){
        print("Could not load Void file! File is unkown!")
    }elseif(fileStatus() ==  _FILE_OK){
        print("Could not load Void file! File is 'OK'!")
    }elseif(fileStatus() == _FILE_TIMEOUT){
        print("Could not load Void file! File timed out?")
    }elseif(fileStatus() == _FILE_404){
        print("Could not load Void file! File not found?")
    }elseif(fileStatus() == _FILE_TRANSFER_ERROR){
        print("Could not load Void file! Firewall problems, maybe?")
    }else{
        timer("ep_ini",1000)
    }

#    print("Expansion file wrote.. Waiting to append includer.") 
}
if(fileLoaded()&&Trunk["FS",number]==1||clk("forceread1")){
    Trunk["FS",number]==0
    local Cont = fileRead()
    print("Cont = "+Cont)
    if(Cont != Trunk["FC",string]){
        if(fileCanWrite()){
            fileWrite(">e2shared/s1/expansions/"+Trunk["FN",string]," ")
        }elseif(fileStatus() == _FILE_UNKNOWN){
            print("Could not write Void file! File is unkown!")
        }elseif(fileStatus() ==  _FILE_OK){
            print("Could not write Void file! File is 'OK'!")
        }elseif(fileStatus() == _FILE_TIMEOUT){
            print("Could not write Void file! File timed out?")
        }elseif(fileStatus() == _FILE_404){
            print("Could not write Void file! File not found?")
        }elseif(fileStatus() == _FILE_TRANSFER_ERROR){
            print("Could not write Void file! Firewall problems, maybe?")
        }else{
            print("It just wont write!")
        }
        timer("ep_ini",1000)
        print("Write failed, retrying")
    }elseif(Cont == ""){
        timer("ep_ini",1000)
    }else{
        fileAppend(">e2shared/s1/expansions/"+Trunk["FN",string],Trunk["FC",string])
        print("Appending include function")
        timer("ep_includes",15000)
    }
}
#[#######################################################
#[#######################################################
#[############### HTTP Handling blocks ##################
#[#######################################################
#[#######################################################
]#
if(httpClk()){
    Data = httpData()
    print("Request successful")
    entity():soundPlay(1,2,"npc/overwatch/radiovoice/beginscanning10-0.wav")
    if(Data:find("401")){
        printColor(vec(220,0,0),""+Data+". Your login request was denied, please try again or apply for a Auth Key on the BHC forums")
        Authent = 0
        setName("Searren 1
"+Version+"
BHCs official operating system.
Later revisions will be released at:
www.felthatters.net/smf/
"+L_up+"
Author: Serconker
User is unauthenticated.")
        Auth_str = "[Unauthentic user]"
        timer("Failure",1)
    }elseif(Data:find("Expression 2 is fully up to date!")){
        timer("Got_down",1000)
        printColor(vec(0,120,0),"Your version of Searren 1 is currently up to date!")
        entity():soundPlay(1,3,"npc/metropolice/vo/clearno647no10-107.wav")
    }elseif(Data:find("Authed")){
        if(Modded==1){
            setName("Searren 1
"+Version+"
BHCs official operating system.
Modifiyed version!
Later revisions will be released at:
www.felthatters.net/smf/
"+L_up+"
Author: Serconker
User is authenticated.")
        }else{
            setName("Searren 1
"+Version+"
BHCs official operating system.
Later revisions will be released at:
www.felthatters.net/smf/
"+L_up+"
Author: Serconker
User is authenticated.")
        }
            if(S1_rcon_allow != 0){
                timer("rcon_a",10000)
                print("Fetching any RCON commands in five seconds")
            }else{
                print("RCON is either dissabled or undefined")
            }
        Data_split = Data:explode(" ")
        Authent = Data_split[4,string]:toNumber()
        printColor(vec(0,120,0),""+Data_split[1,string])
        Auth_str = "[Authentic user]"
        timer("G1",0)
        timer("Connect",0)
        timer("Versionget",1000)
        #timer("Cig",5000)
        #timer("RunSoul",2000)
        timer("Mouse",0)
        playTheme()
        core_addlog(ID2+" was authenticated.")
    }elseif(Data:find("Denied, auth")){
        printColor(vec(220,0,0),""+Data)
        Authent = 0
        setName("Searren 1
"+Version+"
BHCs official operating system.
Later revisions will be released at:
www.felthatters.net/smf/
"+L_up+"
Author: Serconker
User is unauthenticated.")
        Auth_str = "[Unauthentic user]"
        timer("Uaa",0)
    }elseif(Data:find("startcon")){ ##For RCON/Message checker
        S1_rcon_command_line = httpData():explode(";")
        S1_rcon_enum_quee_l = S1_rcon_command_line:count()
        S1_rcon_flick_in = 0
        timer("rcon",0)
    }elseif(Data:find("None, idle")){
        print("Idling RCON, next ping; 5 mins")
        timer("rcon_a",300000)
    }elseif(Data:find("Modded E2!")){
        timer("Got_down",1000)
        Modded = 1
    }elseif(Data:find("[EXPANSION PACKAGE FOLLOWS]")){
        print("Expansion echo found")
        local Fn = Data:replace("[EXPANSION PACKAGE FOLLOWS]",""):explode("[@]")[2,string]
        Trunk["FN",string]=Fn
        local Fc = Data:replace("[EXPANSION PACKAGE FOLLOWS]",""):explode("[@]")[4,string]
        Trunk["FC",string]=Fc
        #fileWrite(">e2shared/s1/expansions/"+Fn,"")
        timer("ep_ini",1000)
        print("Writing expansion file..")
        
    }else{
        printColor(vec(220,0,0),""+Data)
        timer("Failure",0)
    }
}
#[#######################################################
#[#######################################################
#[################## S.O.U.L Handler ####################
#[#######################################################
#[#######################################################
Blah
]#
if(clk("RunSoul")){
    local Code = array("core.egp.main.create.box.20.256.56.64.64.4", #core.egp.<Screen>.create.<Type; box/boxr/circ/text>.<EGP index>.<Pos X>.<Pos Y>.<Size X>.<Size Y>.<EGP-Group index>
                       "core.egp.main.create.box.21.256.156.64.64.4",
                       "core.egp.main.create.box.22.256.256.64.64.4",
                       "core.egp.main.create.etc.23.256.256.50.4.t.e.x.t. v,Souldb",
                       "core.egp.main.set.button.21.rcon_a.1000", #When making a button you need a timer and its delay from the button press.
                       "core.egp.main.set.group.col.4.40.40.60") 
                    ##core.egp.main.set.button.14.run_menu.0
    for(I=1,Code:count()){ 
        soulCode(Code,I)   ### This is an example of how you can use SOUL with EGP ###
    }                      
}
#[#######################################################
#[#######################################################
#[############### Chat Handling blocks ##################
#[#######################################################
#[#######################################################
]#
if (chatClk(owner())){
    Str = owner():lastSaid():lower():explode(" ")
    Str1 = lastSpoke():lastSaid():lower():explode(" ")
    checkChatCommands()
    if(Str[1,string]=="{app"){
    }
    if(Str[1,string]=="{os"){
        if(Str[2,string]=="changelog"){
            if(Str[3,string]==""){
            print("http://www.felthatters.net/smf/changelog_OS.txt")
            }
        }elseif(Str[2,string]=="authme"){
            Password = Str[3,string]
            timer("Reini",0)
        }elseif(Str[2,string]=="lookup"){
            if(httpCanRequest()){
                findByClass("player")
                E = findClosest(entity():pos())
                local ID3 = shortenID(findPlayerByName(Str[3,string]):steamID())
                httpRequest("http://felthatters.net/smf/s1crux.php?action=lookup&userid="+ID3)
                if(httpClk()){
                    Cl_data = httpData()
                    print(""+Cl_data)
                }
            }else{
                print("Couldn't request data.")
            }
        }elseif(Str[2,string]=="help"){
            if(Str[3,string]==""){
                print("www.felthatters.net/smf/bhc/other/OS.txt")
            }
            if(Str[3,string]=="app"){
                print(""+Cfig[7,string])
            }
        }elseif(Str[2,string]=="apps"){
            print(""+Apps:toString():replace("=",""):trim())
        }elseif(Str[2,string]=="loadcfig"){
            if(Str1[3,string]!=""){
                loadAppCFig(""+Str[3,string])
            }
        }elseif(Str[2,string]=="soul"){
            if(Str[3,string]=="printlog"){
                print(Sys_log)
                print(Str[3,string]:upper())
            }elseif(Str[3,string]=="buttons"){
                print(Buttons)
                print(Buttons2)
            }elseif(Str[3,string]=="groups"){
                print(Groups)
                print(Groups2)
            }elseif(Str[3,string]=="runthis"){
                soulCode(array(owner():lastSaid():replace(Str[1,string]+" "+Str[2,string]+" "+Str[3,string]+" ","")),1)
#                print(owner():lastSaid():replace(Str[1,string]+" "+Str[2,string]+" "+Str[3,string]+" ",""))
            }elseif(Str[3,string]=="objects"){
                for(I=1,Objects:count()){
                    print(I+" "+Objects[I,string]+" "+Objects:count()+"/"+I)
                }
            }
        }elseif(Str[2,string]=="addtologs"){
            core_addlog(Str[3,string])
        }elseif(Str[2,string]=="dlex"){
            if(httpCanRequest()){
                httpRequest("http://felthatters.net/smf/s1crux.php?action=dlex&expdl="+Str[3,string])
            }
        }
    }
}
if(last()){
    core_addlog("Client shutting down..
---------------------------------------------------------------

")
}
#[
Made by Serconker, also known as 'The Other Lexi' and 'Syndyr', plus any other respective alliases, with help from the following personal;
Chikanman, ideas and testing.
Crypto, ideas and testing.
Mathias, testing.
Various other people for testing.

>s1
 >logs
  >log.txt -Contains nothing
 >settings
  >main.txt -MUST contain this;

autolog=0,
pass=test123,
file_dir=>e2shared/s1/files/,
file_indxes=int.txt,

Don't change the bottom two just yet, but the first two you're fine to do so, 
you may also add your own options and such, 
and then call them via the "core_findSettingValue(string)" function
