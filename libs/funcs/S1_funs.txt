@name S1_funs
if(first()){
#include "s1/libs/funcs/io/S1_IO"
    function string shortenID(S:string){
        if(S:lower():find("steam_0:0:")){
            return httpUrlEncode(S:lower():replace("steam_0:0:",""))
        }elseif(S:lower():find("steam_1:0:")){
            return httpUrlEncode(S:lower():replace("steam_1:0:",""))
        }elseif(S:lower():find("steam_0:1:")){
            return httpUrlEncode(S:lower():replace("steam_0:1:",""))
        }
    }
    function void array:appendString(S:string){
        This[This:count()+1,string] = S
    }
    function void appendString(A:array,S:string){
        A[A:count()+1,string] = S
    }
    function void array:appendNum(N){
        This[This:count()+1,number] = N
    }
    function void appendString(A:array,N){
        A[A:count()+1,number] = N
    }
    function number patchNum1(A:string,B:string){
        local D = ""+A+""+B+""
        return D:toNumber()
    }
    function number patchNum2(A:string,B:string,C:string){
        local D = ""+A+""+B+""+C+""
        return D:toNumber()
    }
    function void appReg(S:string,Des:string){
        Apps[S,string] = Des
    }
    function number whatsLarger(N,N2){
        if(N>=N2){
            return N
        }elseif(N2>=N){
            return N2
        }
    }
    function void loadAppCFig(Stri:string){
        runOnFile(1)
        printColor(vec(225,0,0),"Trying to load app '"+Stri+"s' configuration file.")
        fileLoad(Stri:lower()+".txt")
        if(fileLoaded()){
            printColor(vec(0,255,0),"Load succesful")
            B = fileRead()
            Cfig = B:explode(" = ")
        }else{
            printColor(vec(255,0,0),"Failed to load, file doesn't exist?")
        }
    }
    function entity closestPly(){
        findByClass("player")
        return findClosest(entity():pos())   
    }
    function void wirelink:getAvatar(){
        Avatar = Data_split[15,string]
        #Avatar = ""
        if(Avatar == "0" | Avatar == ""){
            This:egpMaterial(patchNum1(Data_split[4+1,string],Data_split[4+6,string]),"gui/center_gradient")
            This:egpBox(14,vec2(Cx,Cy-10),vec2(60,60)) #Hat tope
            This:egpBox(15,vec2(Cx,Cy+patchNum1(Data_split[4+2,string],Data_split[4+10,string])),vec2(90,10)) #Hat bottom
            This:egpColor(14,vec(20,20,20))
            This:egpColor(15,vec(20,20,20))
        }else{
            This:egpMaterial(11,Avatar)
        } 
    }
function void wirelink:keyboard(){
    
}
function void wirelink:drawGui(A){
    if(A == 1){
        This:getAvatar()
        print(This:egpNumObjects())
    }
}
    function void wirelink:updateTitle(A){
        if(A == 1){
            This:egpText(patchNum1(Data_split[4+1,string],Data_split[4+10,string]),"Current application: "+App,vec2(Apvx,Apvy))
            This:egpColor(patchNum1(Data_split[4+1,string],Data_split[4+10,string]),vec(255,255,255))
        }elseif(A == 2){
            This:egpText(patchNum1(Data_split[4+1,string],Data_split[4+10,string]),"System idling",vec2(Apvx,Apvy)) 
            This:egpColor(patchNum1(Data_split[4+1,string],Data_split[4+10,string]),vec(255,0,0)) 
        }elseif(A == 3){
        }
    }
    function void playTheme(){
            if(Data_split[16,string] != "0"){
                entity():soundPlay(2,90,""+Data_split[16,string])
        }
    }
    function string getInfo(){
        if(httpCanRequest()){
            httpRequest("http://felthatters.net/smf/qinfo.php?userid="+shortenID(closestPly():steamID()))
            if(httpClk()){
                Cl_data = httpData()
                return Cl_data
            }
        }
    }
    function void wirelink:etc(I,S:string,V:vector2,Z){
        This:egpText(I,S,V)
        This:egpSize(I,Z)
        This:egpAlign(I,1,1)
    }
    function number entity:touching(W:wirelink,I){
        local Y1 = W:egpPos(I):y()-(W:egpSize(I):y()/2)
        local X1 = W:egpPos(I):x()-(W:egpSize(I):x()/2)
        local Y2 = W:egpPos(I):y()+(W:egpSize(I):y()/2)
        local X2 = W:egpPos(I):x()+(W:egpSize(I):x()/2)
        local Vpos = W:egpCursor(This)
        if(inrange(Vpos,vec2(X1,Y1),vec2(X2,Y2))){
            return 1
        }else{
            return 0
        }
    }
}
if(duped()){
 selfDestruct()   
}
