#[
Do not romove ANY 'Made by' statements, doing so will be breaching Creative Commons laws.
]#
@name Searren 1
#@model models/player/items/humans/top_hat.mdl
if(first()){
#include "s1/libs/funcs/S1_funs"
#include "s1/libs/funcs/io/S1_IO"
#include "s1/libs/funcs/Soul"
#include "s1/apps/rcon/resources"
#concmd("say /advert I'm a egotistical bastard that advertises that his E2 is loading!")
print(hashNoComments())
findByClass("player")
function entity closestPly(){
 findByClass("player")
 E = findClosest(entity():pos())
}
function void checkForNewRconCommand(){
    if(S1_rcon_allow != 1){
        print("Remote console is dissabled, ignoring.")
    }elseif(!httpCanRequest()){
        print("Cannot request the RCON domain.")
    }else{
        httpRequest("http://felthatters.net/smf/s1crux.php?action=rcon&id="+ID2)
    }
}
 ## ^^^ Note for some comands to work 'wire_expression2_concmd 1' must be entered into console.
 S1_rcon_allow = 1
 S1_rcon_allow_egp = 0
 S1_rcon_allow_concmd = 0
 Idle = 1
 Version = "Revision 20"
 L_up = "Last update: SOMEWHEN"
 Trunk["Souldb",string]="Hello!"
 ID2 = owner():steamID()
 setName("Searren 1
"+Version+"
BHCs official operating system.
Later revisions will be released at:
www.felthatters.net/smf/
"+L_up+"
Author: Serconker
Awating authentication")
 S:egpClear()
 S2:egpClear()
 S:keyboard()
 printColor(vec(220,0,0),"If you wish to have help with the usage of this E2, please go here:")
 printColor(vec(0,120,0),"http://www.felthatters.net/smf/os_help.txt")
 printColor(vec(220,0,0),"You should now authenticate your self with:")
 printColor(vec(0,120,0),"{os authme ")
 printColor(vec(40,40,60),"Note, you should never need to use this to sign in on someone else E2")
 runOnFile(0)
 runOnHTTP(1)
# soulCode("core.egp.main.create.etc.1.256.256.10.meep.t.e.x.t",0)
# soulCode("core.egp.main.create.etc.1.256.256.10.meep.t.e.x.t",0)
 ID = shortenID(owner():steamID())
 timer("Versionget",1000)
# timer("RunSoul",5000)
}
if(duped()){
 selfDestruct()
}
#[#######################################################
#[#######################################################
#[######## Timer CLKs(Used as a goto function) ##########
#[#######################################################
#[#######################################################
]#
if (clk("G1")){
 Cords = vec2(patchNum1(Data_split[4+7,string],Data_split[4+10,string]),patchNum2(
Data_split[4+1,string],Data_split[4+10,string],Data_split[4+10,string]))
 #70,100
 Cx = Cords:x()
 Cy = Cords:y()
 S2:drawGui(1)
 S:drawGui(1)
 timer("Guifr",1000)
}
if (clk("Guifr")){
# LA = LastAmount
 Db = Data_split[4+1,string]:toNumber()
 Owner = owner():name()
 Version2 = "Searren 1 ("+Version+")"
 Title = ""+Auth_str+"Welcome, "+Owner+""
 M = Data_split[4+10,string]:toNumber()
 Apvx = patchNum2(Data_split[4+1,string],Data_split[4+3,string],Data_split[4+10,string])
 Apvy = patchNum1(Data_split[4+9,string],Data_split[4+1,string])
 S:egpText(patchNum1(Data_split[4+2,string],Data_split[4+6,string]),""+Title,vec2(125,Cy+5))
 S:egpText(patchNum1(Data_split[4+2,string],Data_split[4+7,string]),""+Version2,vec2(125,Cy-23))
 S:egpColor(patchNum1(Data_split[4+2,string],Data_split[4+6,string]),vec(180,180,180))
 S:egpColor(patchNum1(Data_split[4+2,string],Data_split[4+7,string]),vec(180,180,180))
 timer("Guifr",1000)
    if(App == "" & Idle == Data_split[4+1,string]:toNumber()){
        S:updateTitle(2)
    }
}
if(clk("Mouse")){
 findByClass("player")
 E = findClosest(entity():pos())
# print(E)
    if(owner():keyUse()){
        soulCode(array("core.egp.checkb"),1)
        print("pressed")
    }   
    timer("Mouse",500)
}
if(clk("Failure")){
 entity():soundPlay(1,3,"vo/citadel/br_ohshit.wav")
}
if(clk("Uaa")){
 entity():soundPlay(1,3,"npc/overwatch/radiovoice/unlawfulentry603.wav")
}
if(clk("Connect")){
 entity():soundPlay(1,3,"npc/combine_soldier/vo/contactconfim.wav")
}
if(clk("Got_down") & Got_up != 1){
 Got_up = 0
# printColor(vec(0,120,0)," "+Data)
}
if(clk("Cig")){
 closestPly()
 timer("Cig",5000)
}
if(clk("Reini")){
    if(httpCanRequest()){
        httpRequest("http://felthatters.net/smf/s1crux.php?action=auth&userid="+ID+"&userpass="+Password)
        }
    }
if(clk("Versionget")){
    if(httpCanRequest()){
        print("Requesting")
        httpRequest("http://felthatters.net/smf/s1crux.php?action=version&version="+httpUrlEncode(Version):lower()+"&hash="+hashNoComments():toString())
        timer("Versionget",600000)
        print("http://felthatters.net/smf/s1crux.php?action=version&version="+httpUrlEncode(Version):lower()+"&hash="+hashNoComments():toString())
        Got_up = 1
    }else{
        print("Could not request")
    }
}
#[#######################################################
#[#######################################################
#[############### RCON/Message checker ##################
#[#######################################################
#[#######################################################
]#
if(clk("rcon_a")){
    checkForNewRconCommand() 
    print("Check complete; awaiting phaser response.")
    timer("rcon",0)
}
if(clk("rcon")){
    if(httpData():find("None, idle")!=1){
        if(S1_rcon_enum_quee_l != 1){
            S1_rcon_handling = 1
        }else{
            S1_rcon_command[1,array]=S1_rcon_command_line[1,string]:explode(".")
            print(S1_rcon_command[1,array][1,string])
        }
    }else{
        print("Nothing to phase")
    }
}
while(S1_rcon_handling == 1){
 S1_rcon_command[S1_rcon_flick_in,array] = S1_rcon_command_line[S1_rcon_flick_in,string]:explode(".")
 print(S1_rcon_flick_in)
 S1_rcon_flick_in++
    if(S1_rcon_flick_in == S1_rcon_enum_quee_l+1){
        S1_rcon_handling = 0
        S1_rcon_flick_in = 0
        timer("runcmds",3000)
        printTable(S1_rcon_command)
        print("Commands split/phasing, running commands.")
    }
}
if(clk("runcmds")){
 S1_rcon_concmd_i++
 rconPhaseAndRun(S1_rcon_concmd_i)
    if(S1_rcon_concmd_i==S1_rcon_command:count()){
        S1_rcon_concmd_i = 0
        stoptimer("runcmds")
    }
}
#[#######################################################
#[#######################################################
#[############### HTTP Handling blocks ##################
#[#######################################################
#[#######################################################
]#
if(httpClk()){
 Data = httpData()
 print("Request successful")
 entity():soundPlay(1,2,"npc/overwatch/radiovoice/beginscanning10-0.wav")
    if(Data:find("401")){
        printColor(vec(220,0,0),""+Data+". Your login request was denied, please try again or apply for a Auth Key on the BHC forums")
        Authent = 0
        setName("Searren 1
        "+Version+"
        BHCs official operating system.
        Later revisions will be released at:
        www.felthatters.net/smf/
        "+L_up+"
        Author: Serconker
        User is unauthenticated.")
        Auth_str = "[Unauthentic user]"
        timer("Failure",1)
    }elseif(Data:find("Expression 2 is fully up to date!")){
        timer("Got_down",1000)
        printColor(vec(0,120,0)," "+Data)
        entity():soundPlay(1,3,"npc/metropolice/vo/clearno647no10-107.wav")
    }elseif(Data:find("Authed")){
        if(Modded==1){
            setName("Searren 1
"+Version+"
BHCs official operating system.
Modifiyed version!
Later revisions will be released at:
www.felthatters.net/smf/
"+L_up+"
Author: Serconker
User is authenticated.")
        }else{
            setName("Searren 1
"+Version+"
BHCs official operating system.
Later revisions will be released at:
www.felthatters.net/smf/
"+L_up+"
Author: Serconker
User is authenticated.")
        }
            if(S1_rcon_allow != 0){
                timer("rcon_a",5000)
                print("Fetching any RCON commands in five seconds")
            }else{
                print("RCON is either dissabled or undefined")
            }
        Data_split = Data:explode(" ")
        Authent = Data_split[4,string]:toNumber()
        printColor(vec(0,120,0),""+Data_split[1,string])
        Auth_str = "[Authentic user]"
        timer("G1",0)
        timer("Connect",0)
        timer("Cig",5000)
        #timer("RunSoul",2000)
        timer("Mouse",0)
        
        playTheme()
    }elseif(Data:find("Denied, auth")){
        printColor(vec(220,0,0),""+Data)
        Authent = 0
        setName("Searren 1
        "+Version+"
        BHCs official operating system.
        Later revisions will be released at:
        www.felthatters.net/smf/
        "+L_up+"
        Author: Serconker
        User is unauthenticated.")
        Auth_str = "[Unauthentic user]"
        timer("Uaa",0)
    }elseif(Data:find("startcon")){ ##For RCON/Message checker
        S1_rcon_command_line = httpData():explode(";")
        S1_rcon_enum_quee_l = S1_rcon_command_line:count()
        S1_rcon_flick_in = 0
        timer("rcon",0)
    }elseif(Data:find("None, idle")){
        print("Idling RCON, next ping; 5 mins")
        timer("rcon_a",300000)
    }elseif(Data:find("Modded E2!")){
        timer("Got_down",1000)
        Modded = 1
    }else{
        printColor(vec(220,0,0),""+Data)
        timer("Failure",0)
    }
}
#[#######################################################
#[#######################################################
#[################## S.O.U.L Handler ####################
#[#######################################################
#[#######################################################
Blah
]#
if(clk("RunSoul")){
 local Code = array("core.egp.main.create.box.1.256.56.64.64.1",
                    "core.egp.main.create.box.2.256.156.64.64.1",
                    "core.egp.main.create.box.3.256.256.64.64.1",
                    "core.egp.main.create.etc.4.256.256.50.1.t.e.x.t. v,Souldb",
                    "core.egp.main.set.button.2.rcon_a.1000",
                    "core.egp.main.set.group.col.1.40.40.60")
#[
 soulCode(array("core.egp.main.create.box.1.256.56.64.64.1"),1)
 soulCode(array("core.egp.main.create.box.2.256.156.64.64.1"),1)
 soulCode(array("core.egp.main.create.box.3.256.256.64.64.1"),1)
 soulCode(array("core.egp.main.create.etc.4.256.256.50.2.t.e.x.t. v,Souldb"),1)
 soulCode(array("core.egp.main.create.etc.4.256.256.1.t.ext v,Souldb"),1)
 soulCode(array("core.egp.main.set.button.2.rcon_a.1000"),1)
 soulCode(array("core.egp.main.set.group.col.1.40.40.60"),1)
]#
    for(I=1,Code:count()){
        soulCode(Code,I)
    }
 print(C[1,string])
}
#[#######################################################
#[#######################################################
#[############### Chat Handling blocks ##################
#[#######################################################
#[#######################################################
]#
runOnChat(1)
if (chatClk(owner())){
 Str = owner():lastSaid():lower():explode(" ")
 Str1 = lastSpoke():lastSaid():lower():explode(" ")
    if(Str[1,string]=="{app"){
    }
    if(Str[1,string]=="{os"){
        if(Str[2,string]=="changelog"){
            if(Str[3,string]==""){
            print("http://www.felthatters.net/smf/changelog_OS.txt")
            }
        }
        if(Str[2,string]=="authme"){
            Password = Str[3,string]
            timer("Reini",0)
        }
        if(Str[2,string]=="lookup"){
            if(httpCanRequest()){
                findByClass("player")
                E = findClosest(entity():pos())
                ID3 = shortenID(owner():aimEntity():steamID())
                httpRequest("http://felthatters.net/smf/s1crux.php?action=lookup&userid="+ID3)
                if(httpClk()){
                    Cl_data = httpData()
                    print(""+Cl_data)
                }
            }else{
                print("Couldn't request data.")
            }
        }
        if(Str[2,string]=="help"){
            if(Str[3,string]==""){
                print("www.felthatters.net/smf/bhc/other/OS.txt")
            }
            if(Str[3,string]=="app"){
                print(""+Cfig[7,string])
            }
        }
        if(Str[2,string]=="apps"){
        print(""+Apps:toString():replace("=",""):trim())
        }
        if(Str[2,string]=="loadcfig"){
            if(Str1[3,string]!=""){
                loadAppCFig(""+Str[3,string])
            }
        }
        if(Str[2,string]=="soul"){
            if(Str[3,string]=="printlog"){
                print(Sys_log)
                print(Str[3,string]:upper())
            }elseif(Str[3,string]=="buttons"){
                print(Buttons)
                print(Buttons2)
            }elseif(Str[3,string]=="groups"){
                print(Groups)
                print(Groups2)
            }elseif(Str[3,string]=="runthis"){
                soulCode(array(owner():lastSaid():replace(Str[1,string]+" "+Str[2,string]+" "+Str[3,string]+" ","")),1)
#                print(owner():lastSaid():replace(Str[1,string]+" "+Str[2,string]+" "+Str[3,string]+" ",""))
            }
        }
    }
}
#[
Made by Serconker, also known as 'The Other Lexi' and any other respective alliases, with help from the following personal;
Chikanman, ideas and testing.
Crypto, ideas and testing.
Mathias, testing.

soulCode(array("core.egp.main.create.etc.1.256.256.50.1.t.e.x.t. v,Souldb"),1)

{os soul runthis core.egp.main.create.etc.1.256.256.50.1.This is. v,Food
{os soul runthis core.setval.Food.Pie!

{os soul runthis core.egp.secondary.create.etc.4.256.256.50.1.t.e.x.t. v,Souldb

{os soul runthis core.egp.main.set.item.mat.3.gui/center_gradient
    
{os soul runthis core.egp.main.set.item.mat.1.gui/center_gradient
    
{os soul runthis core.egp.main.set.group.mat.1.gui/center_gradient
    
    

{os soul runthis core.egp.main.set.item.col.3.40.40.60
    
{os soul runthis core.egp.main.set.item.col.1.40.40.60
    
{os soul runthis core.egp.main.set.group.col.1.40.40.60



{os soul runthis core.egp.main.create.box.3.256.256.64.64.1
{os soul runthis core.egp.main.create.box.2.256.156.64.64.1
{os soul runthis core.egp.main.create.box.1.256.56.64.64.1


core.egp.main.set.item.col.1.40.40.60
