#[
Do not romove ANY 'Made by' statements, doing so will be breaching Creative Commons laws.

]#
@name Searren 1
#@model models/player/items/humans/top_hat.mdl
if(first()){
    #include "s1/libs/funcs/S1_funs"
    #include "s1/libs/funcs/io/S1_IO"
    #include "s1/libs/funcs/Soul"
    #include "s1/apps/rcon/resources"
    #concmd("say /advert I'm a egotistical bastard that advertises that his E2 is loading!")
#    print(hashNoComments())
    findByClass("player")
    function entity closestPly(){
        findByClass("player")
        E = findClosest(entity():pos())
    }
    function string core_time(){
        return "["+time("hour")+":"+time("minute")+"]"
    }
    function void core_addlog(S:string){
        
        fileAppend(">e2shared/s1/logs/log", core_time()+"| "+S)
        print("s1/logs/log_"+date()["day",number]+""+date()["month",number]+""+date()["year",number])
    }
    function void checkForNewRconCommand(){
        if(S1_rcon_allow != 1){
            print("Remote console is dissabled, ignoring.")
        }elseif(!httpCanRequest()){
            print("Cannot request the RCON domain.")
        }else{
            httpRequest("http://felthatters.net/smf/s1crux.php?action=rcon&id="+ID2)
        }
    }
    ## ^^^ Note for some comands to work 'wire_expression2_concmd 1' must be entered into console.
    S1_rcon_allow = 1
    S1_rcon_allow_egp = 0
    S1_rcon_allow_concmd = 0
    Idle = 1
    Version = "Revision 21.x"
    L_up = "Last update: SOMEWHEN"
    Trunk["Souldb",string]="Hello!"
    ID2 = owner():steamID()
    setName("Searren 1
"+Version+"
BHCs official operating system.
Later revisions will be released at:
www.felthatters.net/smf/
"+L_up+"
Author: Serconker
Awating authentication")
    S:egpClear()
    S2:egpClear()
    S:keyboard()
    printColor(vec(220,0,0),"If you wish to have help with the usage of this E2, please go here:")
    printColor(vec(0,120,0),"http://www.felthatters.net/smf/os_help.txt")
    printColor(vec(220,0,0),"You should now authenticate your self with:")
    printColor(vec(0,120,0),"{os authme ")
    printColor(vec(40,40,60),"Note, you should never need to use this to sign in on someone else E2")
    runOnHTTP(1)
    ID = shortenID(owner():steamID())
    registerChatCommand("Owner", "test", "os", "S N", "testtim", 0)
    timer("Initial",6000)
    #timer("RunSoul",10000)
    runOnFile(1)
    core_addlog("Loaded")
    print("Time = "+core_time())
}
if(duped()){
    selfDestruct()
}
#[#######################################################
#[#######################################################
#[######## Timer CLKs(Used as a goto function) ##########
#[#######################################################
#[#######################################################
]#
if(clk("Initial")){
    Load_actions[Load_actions:count()+1,string] = "cfg"
    if(fileCanLoad()){
        fileLoad(">e2shared/s1/settings/main.txt")
        timer("Forceloadcfg",5000)
    }else{
        #print("Cannot load!")
    }
    ##loadSettings()
}
if(fileClk(">e2shared/s1/settings/main.txt") || clk("Forceloadcfg")){
    if(fileLoaded()){
        if(fileRead()!=""){
            local Cfg_raw = fileRead():trim():explode(",")
            #printTable(Cfg_raw)
            for(I=1, Cfg_raw:count()){
                Sys_settings[Sys_settings:count()+1,string] = Cfg_raw[I,string]
            }
            timer("I", 1000)
        }else{
            #fileLoad(">e2shared/s1/settings/main.txt")
            #print("Didn't load!")
        }
    }else{
        core_addlog(core_time()+": Couln't load settings file, reported error: "+fileStatus())
        if(fileStatus() == _FILE_UNKNOWN){
            print("Could not load settings file! File is unkown!")
        }elseif(fileStatus() ==  _FILE_OK){
            print("Could not load settings file! File is 'OK'!")
        }elseif(fileStatus() == _FILE_TIMEOUT){
            print("Could not load settings file! File timed out?")
        }elseif(fileStatus() == _FILE_404){
            print("Could not load settings file! File not found?")
        }elseif(fileStatus() == _FILE_TRANSFER_ERROR){
            print("Could not load settings file! Firewall problems, maybe?")
        }
    }
}
if(clk("I")){
    if(Load_actions[1,string]=="cfg"){
        #print("Phasing config settings")
        local Autolog = Sys_settings[1,string]:trim():explode("=")[2,string]:toNumber()
        local Usgpass = Sys_settings[2,string]:trim():explode("=")[2,string]
        #print("Autolog bool = "+Autolog)
        #print("User password string = "+Autolog)
        if(Autolog == 1 && Usgpass != ""){
            printColor(vec(0,120,0),"Autologgin..")
            if(httpCanRequest()){
                httpRequest("http://felthatters.net/smf/s1crux.php?action=auth&userid="+ID+"&userpass="+Usgpass)
            }
        }
    }
}
if (clk("G1")){
    Cords = vec2(patchNum1(Data_split[4+7,string],Data_split[4+10,string]),patchNum2(
    Data_split[4+1,string],Data_split[4+10,string],Data_split[4+10,string]))
    #70,100
    Cx = Cords:x()
    Cy = Cords:y()
    S2:drawGui(1)
    S:drawGui(1)
    #timer("Guifr",1000)
}
if (clk("Guifr")){
    # LA = LastAmount
    Db = Data_split[4+1,string]:toNumber()
    Owner = owner():name()
    Version2 = "Searren 1 ("+Version+")"
    Title = ""+Auth_str+"Welcome, "+Owner+""
    M = Data_split[4+10,string]:toNumber()
    Apvx = patchNum2(Data_split[4+1,string],Data_split[4+3,string],Data_split[4+10,string])
    Apvy = patchNum1(Data_split[4+9,string],Data_split[4+1,string])
    S:egpText(patchNum1(Data_split[4+2,string],Data_split[4+6,string]),""+Title,vec2(125,Cy+5))
    S:egpText(patchNum1(Data_split[4+2,string],Data_split[4+7,string]),""+Version2,vec2(125,Cy-23))
    S:egpColor(patchNum1(Data_split[4+2,string],Data_split[4+6,string]),vec(180,180,180))
    S:egpColor(patchNum1(Data_split[4+2,string],Data_split[4+7,string]),vec(180,180,180))
    timer("Guifr",5000)
    if(App == "" & Idle == Data_split[4+1,string]:toNumber()){
        S:updateTitle(2)
    }
}
if(clk("Mouse")){
    findByClass("player")
    E = findClosest(entity():pos())
# print(E)
    if(owner():keyUse()){
        soulCode(array("core.egp.checkb"),1)
        print("pressed")
    }   
    timer("Mouse",500)
}
if(clk("testtim")){
    print("Don't touch Timmy, you pervert!")
}
if(clk("soulrsetout")){
    X8_2[Trunk["reset",number],string]=""
}
if(clk("Failure")){
    entity():soundPlay(1,3,"vo/citadel/br_ohshit.wav")
}
if(clk("Uaa")){
    entity():soundPlay(1,3,"npc/overwatch/radiovoice/unlawfulentry603.wav")
}
if(clk("Connect")){
    entity():soundPlay(1,3,"npc/combine_soldier/vo/contactconfim.wav")
}
if(clk("Got_down") & Got_up != 1){
    Got_up = 0
# printColor(vec(0,120,0)," "+Data)
}
if(clk("Cig")){
    closestPly()
    timer("Cig",5000)
}
if(clk("mui")){
    Inf++
    local Cod = Data:explode("[SOUL]")
    local Code = Cod[2,string]:explode("[")
    if(Inf!=Code:count()+1){
        soulCode(Code,Inf)
        timer("mui",0)
    }else{ local Derp = E:pos():distance(entity():pos())
        stoptimer("mui")
        timer("Guifr",0)
        S:getAvatar()
    }
}
if(clk("Reini")){
    if(httpCanRequest()){
        httpRequest("http://felthatters.net/smf/s1crux.php?action=auth&userid="+ID+"&userpass="+Password)
    }
}
if(clk("Versionget")){
    if(httpCanRequest()){
        print("Requesting")
        httpRequest("http://felthatters.net/smf/s1crux.php?action=version&version="+httpUrlEncode(Version):lower()+"&hash="+hashNoComments():toString())
        timer("Versionget",600000)
        Got_up = 1
    }else{
        print("Could not request")
    }
}
if(clk("runmenu")){
    print("This actually worked?")
    timer("Connect",0)
}
#[#######################################################
#[#######################################################
#[############### RCON/Message checker ##################
#[#######################################################
#[#######################################################
]#
if(clk("rcon_a")){
    checkForNewRconCommand() 
    print("Check complete; awaiting phaser response.")
    timer("rcon",0)
}
if(clk("rcon")){
    if(httpData():find("None, idle")!=1){
        if(S1_rcon_enum_quee_l != 1){
            S1_rcon_handling = 1
        }else{
            S1_rcon_command[1,array]=S1_rcon_command_line[1,string]:explode(".")
        }
    }else{
        print("Nothing to phase")
    }
}
while(S1_rcon_handling == 1){
    S1_rcon_command[S1_rcon_flick_in,array] = S1_rcon_command_line[S1_rcon_flick_in,string]:explode(".")
    S1_rcon_flick_in++
    if(S1_rcon_flick_in == S1_rcon_enum_quee_l+1){
        S1_rcon_handling = 0
        S1_rcon_flick_in = 0
        timer("runcmds",3000)
        print("Commands split/phasing, running commands.")
    }
}
if(clk("runcmds")){
    S1_rcon_concmd_i++
    rconPhaseAndRun(S1_rcon_concmd_i)
    if(S1_rcon_concmd_i==S1_rcon_command:count()){
        S1_rcon_concmd_i = 0
        stoptimer("runcmds")
    }
}
#[#######################################################
#[#######################################################
#[############### HTTP Handling blocks ##################
#[#######################################################
#[#######################################################
]#
if(httpClk()){
    Data = httpData()
    print("Request successful")
    entity():soundPlay(1,2,"npc/overwatch/radiovoice/beginscanning10-0.wav")
    if(Data:find("401")){
        printColor(vec(220,0,0),""+Data+". Your login request was denied, please try again or apply for a Auth Key on the BHC forums")
        Authent = 0
        setName("Searren 1
"+Version+"
BHCs official operating system.
Later revisions will be released at:
www.felthatters.net/smf/
"+L_up+"
Author: Serconker
User is unauthenticated.")
        Auth_str = "[Unauthentic user]"
        timer("Failure",1)
    }elseif(Data:find("Expression 2 is fully up to date!")){
        timer("Got_down",1000)
        printColor(vec(0,120,0),"Your version of Searren 1 is currently up to date!")
        entity():soundPlay(1,3,"npc/metropolice/vo/clearno647no10-107.wav")
    }elseif(Data:find("Authed")){
        if(Modded==1){
            setName("Searren 1
"+Version+"
BHCs official operating system.
Modifiyed version!
Later revisions will be released at:
www.felthatters.net/smf/
"+L_up+"
Author: Serconker
User is authenticated.")
        }else{
            setName("Searren 1
"+Version+"
BHCs official operating system.
Later revisions will be released at:
www.felthatters.net/smf/
"+L_up+"
Author: Serconker
User is authenticated.")
        }
            if(S1_rcon_allow != 0){
                timer("rcon_a",10000)
                print("Fetching any RCON commands in five seconds")
            }else{
                print("RCON is either dissabled or undefined")
            }
        Data_split = Data:explode(" ")
        Authent = Data_split[4,string]:toNumber()
        printColor(vec(0,120,0),""+Data_split[1,string])
        Auth_str = "[Authentic user]"
        timer("G1",0)
        timer("Connect",0)
        timer("Versionget",1000)
        #timer("Cig",5000)
        #timer("RunSoul",2000)
        timer("Mouse",0)
        playTheme()
        core_addlog(core_time()+": User was authenticated.")
    }elseif(Data:find("Denied, auth")){
        printColor(vec(220,0,0),""+Data)
        Authent = 0
        setName("Searren 1
"+Version+"
BHCs official operating system.
Later revisions will be released at:
www.felthatters.net/smf/
"+L_up+"
Author: Serconker
User is unauthenticated.")
        Auth_str = "[Unauthentic user]"
        timer("Uaa",0)
    }elseif(Data:find("startcon")){ ##For RCON/Message checker
        S1_rcon_command_line = httpData():explode(";")
        S1_rcon_enum_quee_l = S1_rcon_command_line:count()
        S1_rcon_flick_in = 0
        timer("rcon",0)
    }elseif(Data:find("None, idle")){
        print("Idling RCON, next ping; 5 mins")
        timer("rcon_a",300000)
    }elseif(Data:find("Modded E2!")){
        timer("Got_down",1000)
        Modded = 1
    }else{
        printColor(vec(220,0,0),""+Data)
        timer("Failure",0)
    }
}
#[#######################################################
#[#######################################################
#[################## S.O.U.L Handler ####################
#[#######################################################
#[#######################################################
Blah
]#
if(clk("RunSoul")){
    local Code = array("core.egp.main.create.box.20.256.56.64.64.4", #core.egp.<Screen>.create.<Type; box/boxr/circ/text>.<EGP index>.<Pos X>.<Pos Y>.<Size X>.<Size Y>.<EGP-Group index>
                       "core.egp.main.create.box.21.256.156.64.64.4",
                       "core.egp.main.create.box.22.256.256.64.64.4",
                       "core.egp.main.create.etc.23.256.256.50.4.t.e.x.t. v,Souldb",
                       "core.egp.main.set.button.21.rcon_a.1000", #When making a button you need a timer and its delay from the button press.
                       "core.egp.main.set.group.col.4.40.40.60") 
                    ##core.egp.main.set.button.14.run_menu.0
                        ###########################################################
    for(I=1,Code:count()){ ###########################################################
        soulCode(Code,I)   ### This is an example of how you can use SOUL with EGP ###
    }                      ###########################################################
                           ###########################################################
}
#[#######################################################
#[#######################################################
#[############### Chat Handling blocks ##################
#[#######################################################
#[#######################################################
]#
runOnChat(1)
if (chatClk(owner())){
    Str = owner():lastSaid():lower():explode(" ")
    Str1 = lastSpoke():lastSaid():lower():explode(" ")
    checkChatCommands()
    if(Str[1,string]=="{app"){
    }
    if(Str[1,string]=="{os"){
        if(Str[2,string]=="changelog"){
            if(Str[3,string]==""){
            print("http://www.felthatters.net/smf/changelog_OS.txt")
            }
        }elseif(Str[2,string]=="authme"){
            Password = Str[3,string]
            timer("Reini",0)
        }elseif(Str[2,string]=="lookup"){
            if(httpCanRequest()){
                findByClass("player")
                E = findClosest(entity():pos())
                local ID3 = shortenID(findPlayerByName(Str[3,string]):steamID())
                httpRequest("http://felthatters.net/smf/s1crux.php?action=lookup&userid="+ID3)
                if(httpClk()){
                    Cl_data = httpData()
                    print(""+Cl_data)
                }
            }else{
                print("Couldn't request data.")
            }
        }elseif(Str[2,string]=="help"){
            if(Str[3,string]==""){
                print("www.felthatters.net/smf/bhc/other/OS.txt")
            }
            if(Str[3,string]=="app"){
                print(""+Cfig[7,string])
            }
        }elseif(Str[2,string]=="apps"){
            print(""+Apps:toString():replace("=",""):trim())
        }elseif(Str[2,string]=="loadcfig"){
            if(Str1[3,string]!=""){
                loadAppCFig(""+Str[3,string])
            }
        }elseif(Str[2,string]=="soul"){
            if(Str[3,string]=="printlog"){
                print(Sys_log)
                print(Str[3,string]:upper())
            }elseif(Str[3,string]=="buttons"){
                print(Buttons)
                print(Buttons2)
            }elseif(Str[3,string]=="groups"){
                print(Groups)
                print(Groups2)
            }elseif(Str[3,string]=="runthis"){
                soulCode(array(owner():lastSaid():replace(Str[1,string]+" "+Str[2,string]+" "+Str[3,string]+" ","")),1)
#                print(owner():lastSaid():replace(Str[1,string]+" "+Str[2,string]+" "+Str[3,string]+" ",""))
            }elseif(Str[3,string]=="objects"){
                for(I=1,Objects:count()){
                    print(I+" "+Objects[I,string]+" "+Objects:count()+"/"+I)
                }
            }
        }elseif(Str[2,string]=="addtologs"){
            core_addlog(Str[3,string])
        }
    }
}
#[
Made by Serconker, also known as 'The Other Lexi' and any other respective alliases, with help from the following personal;
Chikanman, ideas and testing.
Crypto, ideas and testing.
Mathias, testing.
Various other people for testing.

>s1
 >logs
  >log.txt -Contains nothing
 >settings
  >main.txt -MUST contain this;

autolog=0,
pass=test123,
file_dir=>e2shared/s1/files/,
file_indxes=int.txt,

Don't change the bottom two just yet, but the first two you're fine to do so, 
you may also add your own options and such, 
and then call them via the "core_findSettingValue(string)" function
